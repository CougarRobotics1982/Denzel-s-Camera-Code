// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "OI.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/ShooterOn1.h"
#include "Commands/aLeft_Back.h"
#include "Commands/aLeft_Side.h"
#include "Commands/aRight_Back.h"
#include "Commands/aRight_Side.h"
#include "Commands/dCameraDrive.h"
#include "Commands/dDriveArcade.h"
#include "Commands/dDriveMecanum.h"
#include "Commands/dDriveStop.h"
#include "Commands/dInvertMotors.h"
#include "Commands/fPreset1.h"
#include "Commands/fPreset2.h"
#include "Commands/fPreset3.h"
#include "Commands/fPreset4.h"
#include "Commands/fShoot.h"
#include "Commands/fShootBack.h"
#include "Commands/fShooterDown.h"
#include "Commands/fShooterNoPID.h"
#include "Commands/fShooterOn.h"
#include "Commands/fShooterUp.h"
#include "Commands/nFan.h"
#include "Commands/nFanOn.h"
#include "Commands/nNetUpDown.h"
#include "Commands/pTilt.h"
#include "Commands/pTilt1.h"
#include "Commands/pTiltDown.h"
#include "Commands/pTiltUp.h"
#include "Commands/sAccelOn.h"
#include "Commands/sGyroOn.h"
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
OI::OI() {
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	xBox = new Joystick(1);
	
	bDriveStop1 = new JoystickButton(xBox, 2);
	bDriveStop1->WhileHeld(new dDriveStop());
	bCameraDrive = new JoystickButton(xBox, 1);
	bCameraDrive->WhenPressed(new dCameraDrive());
	bDriveStop = new JoystickButton(xBox, 8);
	bDriveStop->WhenPressed(new dDriveStop());
	bDriveMecanum = new JoystickButton(xBox, 7);
	bDriveMecanum->WhenPressed(new dDriveMecanum());
	joystick = new Joystick(2);
	
	bFanOn = new JoystickButton(joystick, 10);
	bFanOn->WhenReleased(new nFanOn());
	bShootBack = new JoystickButton(joystick, 6);
	bShootBack->WhenPressed(new fShootBack());
	bPreset4 = new JoystickButton(joystick, 11);
	bPreset4->WhenReleased(new fPreset4());
	bPreset2 = new JoystickButton(joystick, 9);
	bPreset2->WhenReleased(new fPreset2());
	bPreset1 = new JoystickButton(joystick, 8);
	bPreset1->WhenReleased(new fPreset1());
	bNetUpDown = new JoystickButton(joystick, 7);
	bNetUpDown->WhenPressed(new nNetUpDown());
	bShooterUp = new JoystickButton(joystick, 5);
	bShooterUp->WhenReleased(new fShooterUp());
	bShooterDown = new JoystickButton(joystick, 4);
	bShooterDown->WhenReleased(new fShooterDown());
	bTiltUp = new JoystickButton(joystick, 3);
	bTiltUp->WhileHeld(new pTiltUp());
	bTiltDown = new JoystickButton(joystick, 2);
	bTiltDown->WhileHeld(new pTiltDown());
	bShoot = new JoystickButton(joystick, 1);
	bShoot->WhenPressed(new fShoot());
     
        // SmartDashboard Buttons
	SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
	SmartDashboard::PutData("aLeft_Side", new aLeft_Side());
	SmartDashboard::PutData("aRight_Back", new aRight_Back());
	SmartDashboard::PutData("nFan", new nFan());
	SmartDashboard::PutData("fShootBack", new fShootBack());
	SmartDashboard::PutData("nFanOn", new nFanOn());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	
	
	
	//SmartDashboard::PutNumber("Need Angle", G_angle);
	//SmartDashboard::PutNumber("Presure", Robot::net->compressor->GetPressureSwitchValue());
	//SmartDashboard::PutNumber("Vertical Lim", Robot::shooter->verticalLimit->Get());
}
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
Joystick* OI::getxBox() {
	return xBox;
}
Joystick* OI::getJoystick() {
	return joystick;
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
