// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
SpeedController* RobotMap::driveTrainLeftFront = NULL;
SpeedController* RobotMap::driveTrainLeftRear = NULL;
SpeedController* RobotMap::driveTrainRightFront = NULL;
SpeedController* RobotMap::driveTrainRightRear = NULL;
RobotDrive* RobotMap::driveTrainRobotDrive4 = NULL;
Gyro* RobotMap::sensorsGyro = NULL;
SpeedController* RobotMap::shooterMotor = NULL;
Encoder* RobotMap::shooterGearTooth1 = NULL;
SpeedController* RobotMap::shooterLoader = NULL;
DigitalInput* RobotMap::shooterShooterLimit = NULL;
DigitalInput* RobotMap::shooterVerticalLimit = NULL;
DoubleSolenoid* RobotMap::netPiston = NULL;
Compressor* RobotMap::netCompressor = NULL;
SpeedController* RobotMap::netFan = NULL;
DigitalInput* RobotMap::autonomousLeft_Right = NULL;
DigitalInput* RobotMap::autonomousSide_Back = NULL;
SpeedController* RobotMap::platformVertical = NULL;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
ADXL345_SPI* RobotMap::platformAccel = NULL;
Counter* RobotMap::shooterGearTooth = NULL;
void RobotMap::init() {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	LiveWindow* lw = LiveWindow::GetInstance();
	driveTrainLeftFront = new Jaguar(1, 1);
	lw->AddActuator("DriveTrain", "LeftFront", (Jaguar*) driveTrainLeftFront);
	
	driveTrainLeftRear = new Jaguar(1, 2);
	lw->AddActuator("DriveTrain", "LeftRear", (Jaguar*) driveTrainLeftRear);
	
	driveTrainRightFront = new Jaguar(1, 3);
	lw->AddActuator("DriveTrain", "RightFront", (Jaguar*) driveTrainRightFront);
	
	driveTrainRightRear = new Jaguar(1, 4);
	lw->AddActuator("DriveTrain", "RightRear", (Jaguar*) driveTrainRightRear);
	
	driveTrainRobotDrive4 = new RobotDrive(driveTrainLeftFront, driveTrainLeftRear,
              driveTrainRightFront, driveTrainRightRear);
	
	driveTrainRobotDrive4->SetSafetyEnabled(true);
        driveTrainRobotDrive4->SetExpiration(0.1);
        driveTrainRobotDrive4->SetSensitivity(0.5);
        driveTrainRobotDrive4->SetMaxOutput(1.0);
	sensorsGyro = new Gyro(1, 1);
	lw->AddSensor("Sensors", "Gyro", sensorsGyro);
	sensorsGyro->SetSensitivity(2.5);
	shooterMotor = new Jaguar(1, 6);
	lw->AddActuator("Shooter", "Motor", (Jaguar*) shooterMotor);
	
	shooterGearTooth1 = new Encoder(2, 1, 2, 2, false, Encoder::k4X);
	lw->AddSensor("Shooter", "GearTooth1", shooterGearTooth1);
	shooterGearTooth1->SetDistancePerPulse(1.0);
        shooterGearTooth1->SetPIDSourceParameter(Encoder::kRate);
        shooterGearTooth1->Start();
	shooterLoader = new Victor(1, 7);
	lw->AddActuator("Shooter", "Loader", (Victor*) shooterLoader);
	
	shooterShooterLimit = new DigitalInput(1, 1);
	lw->AddSensor("Shooter", "ShooterLimit", shooterShooterLimit);
	
	shooterVerticalLimit = new DigitalInput(1, 2);
	lw->AddSensor("Shooter", "VerticalLimit", shooterVerticalLimit);
	
	netPiston = new DoubleSolenoid(1, 2, 1);      
	
	
	netCompressor = new Compressor(1, 4, 1, 4);
	
	
	netFan = new Victor(1, 9);
	lw->AddActuator("Net", "Fan", (Victor*) netFan);
	
	autonomousLeft_Right = new DigitalInput(1, 3);
	lw->AddSensor("Autonomous", "Left_Right", autonomousLeft_Right);
	
	autonomousSide_Back = new DigitalInput(1, 6);
	lw->AddSensor("Autonomous", "Side_Back", autonomousSide_Back);
	
	platformVertical = new Victor(1, 5);
	lw->AddActuator("Platform", "Vertical", (Victor*) platformVertical);
	
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	
	platformAccel = new ADXL345_SPI(1, 11, 12, 13, 14);
	shooterGearTooth = new Counter(1, 7);
	shooterGearTooth->Start();
}
