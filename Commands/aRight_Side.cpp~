// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "aRight_Side.h"
#include "fShoot.h"
#include "dCameraDrive.h"
aRight_Side::aRight_Side() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::autonomous);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	shoot = new fShoot();
	drivecamera = new dCameraDrive();
}
// Called just before this Command runs the first time
void aRight_Side::Initialize() {
	Robot::sensors->gyro->Reset();
}
// Called repeatedly when this Command is scheduled to run
void aRight_Side::Execute() {
	counter ++;
	timer = counter/50.0f;
	//have to camera pinpoint the location to shoot
	if( done == false)
	{
		if(!drivecamera->IsRunning())
		{
			if(!first)
			{
				first = true;
				drivecamera->Start();
			}
			else
			{
				done = true;
			}
		}
	}
	//shoot the fisbees with a second inbetween
	if(done)
	{
		Robot::shooter->setPoint = 3300;
		if(ntimer == 0)
			ntimer = timer + 1;
		if (ntimer == timer)
		{
			ntimer = timer + 1;
			shoot->Start();
		}
	}
}
// Make this return true when this Command no longer needs to run execute()
bool aRight_Side::IsFinished() {
	if(timer > 15)
		return true;
	else
		return false;
}
// Called once after isFinished returns true
void aRight_Side::End() {
	
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void aRight_Side::Interrupted() {
}
