// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "AutonomousCommand.h"
#include "aLeft_Side.h"
#include "aLeft_Back.h"
#include "aRight_Side.h"
#include "aRight_Back.h"
#include "nNetUpDown.h"
AutonomousCommand::AutonomousCommand() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// Called just before this Command runs the first time
void AutonomousCommand::Initialize() {
	(new nNetUpDown())->Start();
	
	
	if(Robot::autonomous->left_Right->Get() == 1)
	{	//RIGHT
		
		
		//printf("asdfasdfasdfasdf\nasdf\nasdf\nasdf\nasdf\n\asdf\1\n1\n1\n1n1\n");
		//if you're on the left side then execute the command
		autoCommand = new aLeft_Side();
		autoCommand->Start();
	}
	else
	{	//LEFT
		
		//printf("asdfasdfasdfasdf\nasdf\nasdf\nasdf\nasdf\n\asdf\2\n2\n2\n2\n2\n");
		//if you're on the left back then execute the command
		autoCommand = new aLeft_Back();
		autoCommand->Start();
	}	
}
// Called repeatedly when this Command is scheduled to run
void AutonomousCommand::Execute() {
	
}
// Make this return true when this Command no longer needs to run execute()
bool AutonomousCommand::IsFinished() {
	return false;
}
// Called once after isFinished returns true
void AutonomousCommand::End() {
	
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void AutonomousCommand::Interrupted() {
	
}
