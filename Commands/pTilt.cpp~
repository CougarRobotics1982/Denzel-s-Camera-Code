// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "pTilt.h"
pTilt::pTilt() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::platform);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// Called just before this Command runs the first time
void pTilt::Initialize() {
	count = 0;
	done = false;
}
// Called repeatedly when this Command is scheduled to run
void pTilt::Execute() {
	float actual_angle;
	
	if(count > 10)
		actual_angle = Robot::platform->GetFilteredAngle();
	else
	{
		actual_angle = Robot::platform->GetAngle();
		Robot::platform->filteredAngle = actual_angle;
	}
	
	float error = Robot::platform->angle - actual_angle;
	float ERspeed = error * .15;
	
	if(ERspeed > 1)
		ERspeed = 1;
	if(ERspeed < -1)
		ERspeed = -1;
	if(error <= 1 && error >= -1 )
	{
		ERspeed = 0;
		done = true;
	}
	
	printf("Angle: %f Set Angle: %f\n", actual_angle, Robot::platform->angle);
	
	//Robot::platform->vertical->Set(-1*ERspeed, 0);
	
	count++;
}
// Make this return true when this Command no longer needs to run execute()
bool pTilt::IsFinished() {
	return false;
}
// Called once after isFinished returns true
void pTilt::End() {
	Robot::platform->vertical->Set(0, 0);
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void pTilt::Interrupted() {
	Robot::platform->vertical->Set(0, 0);
}
