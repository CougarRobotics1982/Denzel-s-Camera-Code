// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "Autonomous.h"
#include "../Robotmap.h"
#include "../Commands/fPreset1.h"
#include "../Commands/fPreset2.h"
#include "../Commands/fShoot.h"
Autonomous::Autonomous() : Subsystem("Autonomous") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	left_Right = RobotMap::autonomousLeft_Right;
	side_Back = RobotMap::autonomousSide_Back;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	shoot = new fShoot();
	
}
    
void Autonomous::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
}
// Put methods for controlling this subsystem
// here. Call these from Commands.
void Autonomous::AutonomousInit(bool side)
{
	armed = false;
	
	if(side)
	{
		preset = (new fPreset1());
		preset->Start();
	}
	else
	{
		preset = (new fPreset2());
		preset->Start();
	}
	done = false;
	shoot_count = 0;
}
void Autonomous::AutonomousExecute()
{
	if(!preset->IsRunning() && armed)
	{
		if(!shoot->IsRunning() && shoot_count < 4)
		{
			shoot->Start();
			shoot_count++;
			printf("SHOOT!!!!!!!!!!!!!!!!");
		}
		else if (shoot_count == 4)
		{
			done = true;
		}
	}
	
	if(preset->IsRunning())
		armed = true;
}
bool Autonomous::AutonomousIsFinished()
{
	return done;
}
